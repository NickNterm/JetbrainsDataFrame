DataFrame structure can be hierarchical. It can host essentially any data, including long String, BufferedImage, etc. People might choose to read data from JSON, CSV, Excel, or SQL databases.
To visualize DataFrame, we have toString, schema().toString, toHTML, and a table component in Kotlin Notebook.
Share your thoughts, what do you think is good and bad about these methods? Think of a way you'd improve it, or suggest a different way to visualize DataFrame.
Implement a showcase of this idea in code. Your implementation shouldn't include many features. Focus on specific things you see as important for a use case. For example: working with a bunch of files, parsing data from websites, working with many numerical columns, etc.
Use DataFrame as input. Output can be in Swing, Compose, HTML.

Hello! Looking at this problem I think it's a great opportunity to design something nice to visualize dataframes on a way that's pleasant for the develop who is working with the dataframe.
Personally I think working with Kotlin notebook is the smoothest experiance to manipulate dataframes on first hand. It's easy to work with, it gets the job done in steps and its well developed tool in general.
Using the dataframes on notebook seems really good without any problems but still I think it can get improved further. I would like pay attention in small details which makes some small tasks easier.
For example the feature to sort the table on the view based on the column is really nice. Also the fact that on booleans there is a small dot on true make it easier to distinguish the boolean values

# My Idea
I would love to see a more advanced view of this table of data on notebook and also on the IntelliJ. It would be really nice to have a tool to see the dataframes with some features like
* column sorting
* colored fields on Integers/Floats/Booleans depending on the value
  * the ability to disable coloring on a Column
  * Also be able to change start/end color and the scale (I mean to have a start and end color to animated the value. having green for big numbers and red for small isn't always the way to go. So a flag to swap start and end color)
* image preview on small web pictures
* Show Booleans with icons like check and cross
  * also have the ability to switch back to true/false view

Thinking about implementing those features the only thing that I can use is HTML. So in my solution I used a new function .toCustomHtml that extends dataframes. I have created a function that writes down the html elements
supporting some stuff like
* Colored Integer Fields with a scale
* Image Preview for images
* Boolean columns are checkboxes/crosses and colored
